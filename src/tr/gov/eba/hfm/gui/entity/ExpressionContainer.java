/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tr.gov.eba.hfm.gui.entity;

import java.awt.Color;
import java.util.ArrayList;
import tr.gov.eba.hfm.config.Config;
import tr.gov.eba.hfm.entity.ExtendedDnsIp;

/**
 *
 * @author ismailakpolat
 */
public class ExpressionContainer extends javax.swing.JPanel {
    
    private ExpressionLabel label;
    private ExpressionComboBox combo;
//    private ExpressionApplyButton button;
    private ExpressionAddIpButton ipAddButton;
    private ExpressionRemoveIpButton ipRemoveButton;
    private ExpressionRemoveButton removeButton;

    public ExpressionContainer(String dnsName, ArrayList<ExtendedDnsIp> ipList) {
        initComponents();
        this.label = new ExpressionLabel(dnsName);
        this.combo = new ExpressionComboBox(ipList, this);
//        this.button = new ExpressionApplyButton("Apply", this);
        this.ipAddButton = new ExpressionAddIpButton(this);
        this.ipRemoveButton = new ExpressionRemoveIpButton(this);
        this.removeButton = new ExpressionRemoveButton(this);
        add(label);
        add(combo);
//        add(button);
        add(ipAddButton);
        add(ipRemoveButton);
        add(removeButton);
        setVisible(true);
//        System.out.println("dnsName:" +dnsName);
    }
    
    /**
     * Dns + ip string to be written into hosts terminal.
     * 
     * @return dns + ip.
     */
    public String getSelectedIp() {
        return combo.getSelectedItem() + "";
    }
    
    /**
     * Dns string to be written into hosts terminal.
     * 
     * @return dns.
     */
    public String getDns() {
        return label.getText();
    }
    
    /**
     * @return Number of items in the combo box.
     */
    public int getIpSize() {
        return combo.getItemCount();
    }
    
    /**
     * @return Ip list of combo box.
     */
    public ArrayList<String> getIpList() {
        ArrayList<String> list = new ArrayList<String>();
        for(int i=0; i<combo.getItemCount(); i++)
            list.add(""+combo.getItemAt(i));
        return list;
    }
    
    /**
     * Removes ip from combo box.
     * @param index 
     */
    public void removeIp(int index) {
       combo.removeItemAt(index);
    }
    
    
    /**
     * Set locations of components.
     * @param x Initial x position.
     * @param y Initial y position.
     */
    public void setLocations(int x, int y) {
        setBounds(0,y,Config.expressContainerWidth,Config.expressContainerHeight);
        label.setLocation(x,0);
        combo.setLocation(x+label.getWidth(), 3);
        ipAddButton.setLocation(x+combo.getWidth()+combo.getX(), 15);
        ipRemoveButton.setLocation(x+ipAddButton.getWidth()+ipAddButton.getX(),15);
        removeButton.setLocation(x+ipRemoveButton.getWidth()+ipRemoveButton.getX(),15);
//        button.setLocation(5+ipButton.getWidth()+ipButton.getX(), 8);
    }
    
    /**
     * Repaints label with given color.
     * 
     * @param color Color object.
     */
    public void paintExprsLabel(Color color) {
        label.setForeground(color);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(70, 70, 70));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
